% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bmab.R
\name{bmab_gi_multiple}
\alias{bmab_gi_multiple}
\title{Calculate Gittins indices for multiple starting states (Bernoulli rewards)}
\usage{
bmab_gi_multiple(
  alpha_start = NULL,
  beta_start = NULL,
  num_actions,
  gamma,
  N,
  tol = 5e-04,
  Sigma_start = NULL,
  n_start = NULL
)
}
\arguments{
\item{alpha_start}{Lowest value of alpha for the arms.}

\item{beta_start}{Lowest value of beta for the arms.}

\item{num_actions}{Determines the number of states GI are calculated for.}

\item{gamma}{Numeric in (0, 1); discount factor.}

\item{N}{Integer >= 2; time horizon used.}

\item{tol}{Numeric > 0. Absolute accuracy required.}

\item{Sigma_start}{Lowest value of Sigma for the arms.}

\item{n_start}{Lowest value of n for the arms.}
}
\value{
A data frame of starting states and GI values. Extra information is stored in attributes
(see examples):
\itemize{
\item \code{params}: the parameters used.
\item \code{gi_matrix}: the GI values in a matrix (beta x alpha).
\item \code{gi_matrix_ns}: the GI values in a matrix (n x Sigma).
}
}
\description{
Runs \code{bmab_gi()} multiple times for a range of arm starting states. The starting states used are
determined by the starting state arguments  and \code{num_actions} (see details). Other arguments are
passed to \code{bmab_gi()}.
}
\details{
The starting states are either given in alpha/beta or Sigma/n form (strictly one or the other).
These are alternative ways of doing the same thing since  \code{alpha = Sigma} and  \code{beta = n - Sigma}.

The GI are calculated for arms with the following states:
\itemize{
\item \code{alpha = alpha_start : (alpha_start_start + num_actions - 1)},
\item \code{beta = beta_start : (beta_start + num_actions - 1)},
\item where \code{alpha + beta <= num_actions + alpha_start + beta_start - 1}.
}
}
\examples{
b1 <- bmab_gi_multiple(1, 1, num_actions = 4, gamma = 0.8, N = 20)
b2 <- bmab_gi_multiple(num_actions = 4, gamma = 0.8, N = 20, Sigma_start = 1, n_start = 2)
identical(b1, b2) # TRUE
# View attributes
attr(b1, "params")
attr(b1, "gi_matrix")
attr(b1, "gi_matrix_ns")

}
